{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nconst apiEndPoint = apiUrl;\nconst tokenKey = \"token\";\nexport async function login(userName, password, type) {\n  const {\n    data: jwt\n  } = await http.post(apiEndPoint, {\n    userName,\n    password,\n    type\n  });\n  console.log(jwt);\n  return jwt; // if (Object.keys(jwt.data).length == 0) {\n  //   toast.error(\"Invalid username or password\");\n  // } else {\n  //   localStorage.setItem(tokenKey, jwt.data);\n  //   console.log(\"You have logged in successfully\");\n  //   // this.props.history.push(\"/\");\n  // }\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n} // export function getCurrentUser() {\n//   try {\n//     const jwt = localStorage.getItem(tokenKey);\n//     return jwtDecode(jwt);\n//   } catch (ex) {\n//     return null;\n//   }\n// }\n\nexport default {\n  login,\n  logout //getCurrentUser,\n\n};","map":{"version":3,"sources":["D:/OBEaaS/gitOBEaaS/OBE-as-a-Service/Presentation/src/services/authService.js"],"names":["jwtDecode","http","apiUrl","apiEndPoint","tokenKey","login","userName","password","type","data","jwt","post","console","log","logout","localStorage","removeItem"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,WAAW,GAAGD,MAApB;AACA,MAAME,QAAQ,GAAG,OAAjB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AACpD,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMT,IAAI,CAACU,IAAL,CAAUR,WAAV,EAAuB;AACjDG,IAAAA,QADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAAvB,CAA5B;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,SAAOA,GAAP,CAPoD,CAQpD;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,SAASI,MAAT,GAAkB;AACvBC,EAAAA,YAAY,CAACC,UAAb,CAAwBZ,QAAxB;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACbC,EAAAA,KADa;AAEbS,EAAAA,MAFa,CAGb;;AAHa,CAAf","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = apiUrl;\r\nconst tokenKey = \"token\";\r\n\r\nexport async function login(userName, password, type) {\r\n  const { data: jwt } = await http.post(apiEndPoint, {\r\n    userName,\r\n    password,\r\n    type,\r\n  });\r\n  console.log(jwt);\r\n  return jwt;\r\n  // if (Object.keys(jwt.data).length == 0) {\r\n  //   toast.error(\"Invalid username or password\");\r\n  // } else {\r\n  //   localStorage.setItem(tokenKey, jwt.data);\r\n  //   console.log(\"You have logged in successfully\");\r\n  //   // this.props.history.push(\"/\");\r\n  // }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\n// export function getCurrentUser() {\r\n//   try {\r\n//     const jwt = localStorage.getItem(tokenKey);\r\n//     return jwtDecode(jwt);\r\n//   } catch (ex) {\r\n//     return null;\r\n//   }\r\n// }\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  //getCurrentUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiUrl } from \"../config.json\";\nconst apiEndPoint = apiUrl;\nconst tokenKey = \"token\"; // http.setJwt(getJwt());\n\nconst history = useHistory();\nexport async function login(userName, password, type) {\n  const {\n    data: jwt\n  } = await http.post(apiEndPoint, {\n    userName,\n    password,\n    type\n  });\n\n  if (Object.keys(jwt.data).length == 0) {\n    toast.error(\"Invalid username or password\");\n  } else {\n    localStorage.setItem(tokenKey, jwt.data);\n    console.log(\"You have logged in successfully\");\n    history.push(\"/navbar\");\n  }\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n} // export function getJwt() {\n//   return localStorage.getItem(tokenKey);\n// }\n\nexport default {\n  login,\n  logout,\n  getCurrentUser //getJwt,\n\n};","map":{"version":3,"sources":["D:/OBEaaS/gitOBEaaS/OBE-as-a-Service/Presentation/src/services/authService.js"],"names":["jwtDecode","http","toast","useHistory","apiUrl","apiEndPoint","tokenKey","history","login","userName","password","type","data","jwt","post","Object","keys","length","error","localStorage","setItem","console","log","push","logout","removeItem","getCurrentUser","getItem","ex"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,WAAW,GAAGD,MAApB;AACA,MAAME,QAAQ,GAAG,OAAjB,C,CAEA;;AACA,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;AAEA,OAAO,eAAeK,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AACpD,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMZ,IAAI,CAACa,IAAL,CAAUT,WAAV,EAAuB;AACjDI,IAAAA,QADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAAvB,CAA5B;;AAKA,MAAII,MAAM,CAACC,IAAP,CAAYH,GAAG,CAACD,IAAhB,EAAsBK,MAAtB,IAAgC,CAApC,EAAuC;AACrCf,IAAAA,KAAK,CAACgB,KAAN,CAAY,8BAAZ;AACD,GAFD,MAEO;AACLC,IAAAA,YAAY,CAACC,OAAb,CAAqBd,QAArB,EAA+BO,GAAG,CAACD,IAAnC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,SAAb;AACD;AACF;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBL,EAAAA,YAAY,CAACM,UAAb,CAAwBnB,QAAxB;AACD;AAED,OAAO,SAASoB,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMb,GAAG,GAAGM,YAAY,CAACQ,OAAb,CAAqBrB,QAArB,CAAZ;AACA,WAAON,SAAS,CAACa,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOe,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF,C,CAED;AACA;AACA;;AAEA,eAAe;AACbpB,EAAAA,KADa;AAEbgB,EAAAA,MAFa;AAGbE,EAAAA,cAHa,CAIb;;AAJa,CAAf","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = apiUrl;\r\nconst tokenKey = \"token\";\r\n\r\n// http.setJwt(getJwt());\r\nconst history = useHistory();\r\n\r\nexport async function login(userName, password, type) {\r\n  const { data: jwt } = await http.post(apiEndPoint, {\r\n    userName,\r\n    password,\r\n    type,\r\n  });\r\n  if (Object.keys(jwt.data).length == 0) {\r\n    toast.error(\"Invalid username or password\");\r\n  } else {\r\n    localStorage.setItem(tokenKey, jwt.data);\r\n    console.log(\"You have logged in successfully\");\r\n    history.push(\"/navbar\");\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\n// export function getJwt() {\r\n//   return localStorage.getItem(tokenKey);\r\n// }\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  //getJwt,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}